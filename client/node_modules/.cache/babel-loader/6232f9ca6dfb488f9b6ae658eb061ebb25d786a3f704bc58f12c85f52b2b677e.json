{"ast":null,"code":"import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  date.setDate(date.getDate() + toInteger(amount / 5) * 7);\n  amount %= 5; // to get remaining days not part of a full week\n  // only loops over remaining days or if day is a weekend, ensures a business day is returned\n\n  while (amount || isWeekend(date)) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) amount -= sign;\n  }\n  date.setHours(hours);\n  return date;\n}","map":{"version":3,"names":["isWeekend","toDate","toInteger","addBusinessDays","dirtyDate","dirtyAmount","arguments","length","TypeError","date","amount","isNaN","Date","NaN","hours","getHours","sign","setDate","getDate","setHours"],"sources":["/Users/kavindufernando/Desktop/Booking/client/node_modules/date-fns/esm/addBusinessDays/index.js"],"sourcesContent":["import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  date.setDate(date.getDate() + toInteger(amount / 5) * 7);\n  amount %= 5; // to get remaining days not part of a full week\n  // only loops over remaining days or if day is a weekend, ensures a business day is returned\n\n  while (amount || isWeekend(date)) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) amount -= sign;\n  }\n\n  date.setHours(hours);\n  return date;\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,SAAS,MAAM,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,eAAeA,CAACC,SAAS,EAAEC,WAAW,EAAE;EAC9D,IAAIC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IACxB,MAAM,IAAIC,SAAS,CAAC,iCAAiC,GAAGF,SAAS,CAACC,MAAM,GAAG,UAAU,CAAC;EACxF;EAEA,IAAIE,IAAI,GAAGR,MAAM,CAACG,SAAS,CAAC;EAC5B,IAAIM,MAAM,GAAGR,SAAS,CAACG,WAAW,CAAC;EACnC,IAAIM,KAAK,CAACD,MAAM,CAAC,EAAE,OAAO,IAAIE,IAAI,CAACC,GAAG,CAAC;EACvC,IAAIC,KAAK,GAAGL,IAAI,CAACM,QAAQ,CAAC,CAAC;EAC3B,IAAIC,IAAI,GAAGN,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAC9BD,IAAI,CAACQ,OAAO,CAACR,IAAI,CAACS,OAAO,CAAC,CAAC,GAAGhB,SAAS,CAACQ,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACxDA,MAAM,IAAI,CAAC,CAAC,CAAC;EACb;;EAEA,OAAOA,MAAM,IAAIV,SAAS,CAACS,IAAI,CAAC,EAAE;IAChCA,IAAI,CAACQ,OAAO,CAACR,IAAI,CAACS,OAAO,CAAC,CAAC,GAAGF,IAAI,CAAC;IACnC,IAAI,CAAChB,SAAS,CAACS,IAAI,CAAC,EAAEC,MAAM,IAAIM,IAAI;EACtC;EAEAP,IAAI,CAACU,QAAQ,CAACL,KAAK,CAAC;EACpB,OAAOL,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}